% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{block_randomize}
\alias{block_randomize}
\title{Evenly spread/randomize samples into manageable blocks for batch-processing}
\usage{
block_randomize(
  df,
  batch_col = "batch",
  condition_col = "condition",
  bio_replicate_col = "bio_replicate",
  scramble = TRUE,
  seed = NULL
)
}
\arguments{
\item{df}{Input Data frame that contains your blocked.}

\item{batch_col}{Column name representing batches (in case the samples come from different batches, e.g. cohorts or prior batching during processing), defaults to "batch".}

\item{condition_col}{Column name representing your test conditions, defaults to a column called "condition" in your dataframe.}

\item{bio_replicate_col}{Column name representing biological replicates, defaults to "bio_replicate".}

\item{scramble}{Logical flag (TRUE or FALSE) to determine whether rows should be shuffled, defaults to TRUE.}

\item{seed}{Optional numeric seed for reproducibility, defaults to NULL (no seed). But the recommendation is to set the seed to make reproducible.}
}
\value{
A data frame with rows rearranged into blocks.
The main outcome is column called "block".
The "block" column contains a number for your experimental blocks. Importantly, the "block_size" column contains the minimum of samples that you have to run together in one block.
If this number exceeds what you can process in one block, then you need to strike some compromises. Compromise options include i) leaving out batches all togehter or,
ii) in-silico reducing of any prior batching/cohorting, e.g. if you have 4 prior batches, turn them into 2 evenly mixed in-silico batches).
}
\description{
The function considers batches, conditions and bioreplicates, and evenly spreads/randomizes samples into manageable experimental blocks.
For example, you have an experiment with 200 samples (4 conditions,n=50 per condition).
But you cannot process all of these in a single block, because you can only process a maximum of 30 samples at one time.
Therefore you need to split your lab work into blocks of a certain size..
This function assists in the blocking, so that conditions (and any other prior batching or cohorts) are spread EVENLY across your blocks.
This ensures that
i) the effects you are measuring between your conditions are not clouded/overshadowed by blocking-effects and
ii) the effects of the blocking are not accidentally interpreted by you as 'real' effects caused by your conditions
}
\examples{
set.seed(42)

#' Define the conditions, batches, and maximum bioreplicates
conditions <- c("KO_ctrl", "WT_ctrl", "KO_treated", "WT_treated")
num_batches <- 3
max_bioreplicates <- 5

#' Initialize lists to store data
conditions_list <- c()
batches_list <- c()
bioreplicates_list <- c()

#' Generate random data for the sample data frame
for (condition in conditions) {
  for (batch in 1:num_batches) {
    num_bioreplicates <- sample(1:max_bioreplicates, 1)

    conditions_list <- c(conditions_list, rep(condition, num_bioreplicates))
    batches_list <- c(batches_list, rep(paste0("Batch", batch), num_bioreplicates))
    bioreplicates_list <- c(bioreplicates_list, seq(1, num_bioreplicates))
  }
}

#' Create a data frame
sample_df <- data.frame(
  condition = factor(conditions_list),
  batch = factor(batches_list),
  bio_replicate = bioreplicates_list
)

#' Display the sample data frame
print(sample_df)



result <- block_randomize(df = sample_df,
                                batch_col = "batch",
                                condition_col = "condition",
                                bio_replicate_col = "bio_replicate",
                                scramble = T,
                                seed = 1000)
                                
}
