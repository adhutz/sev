% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{plot_overlap}
\alias{plot_overlap}
\title{Plot Overlap of Antigen Intensity Differences}
\usage{
plot_overlap(
  df = temp_df,
  samples = NULL,
  condition = "MGN_ag_neg",
  ctrl = "ctrl",
  targets = data.frame(name = character(0), target = character(0)),
  scaled = FALSE
)
}
\arguments{
\item{df}{A data frame containing the processed data, with columns representing sample intensities and differences. Defaults to \code{temp_df}.}

\item{samples}{A character vector specifying which sample columns to include. If \code{NULL}, samples matching the condition pattern are selected automatically.}

\item{condition}{A string specifying the condition name used for filtering and plotting. Defaults to \code{"MGN_ag_neg"}.}

\item{ctrl}{A string representing the control condition name, used for labeling the plot. Defaults to \code{"ctrl"}.}

\item{targets}{A data frame with \code{name} and \code{target} columns for highlighting specific targets. Defaults to an empty data frame.}

\item{scaled}{A logical value indicating whether the y-axis should be labeled as scaled. Defaults to \code{FALSE}.}
}
\value{
A \code{ggplot2} object representing a scatter plot that shows antigen overlap based on mean differences and intensities, with options for customized labeling and color coding.
}
\description{
This function creates a summary plot that visualizes the overlap of proteins based on the mean difference and mean intensity across multiple samples. It highlights the distribution of data points that meet certain criteria and optionally labels specific targets.
}
\details{
The function processes input data to compute summaries for each antigen and plots them based on the number of samples in which they are detected. Points can be color-coded by target if provided, and labeled to show individual antigens and patients.
}
\examples{
# Assuming `df` is a valid data frame with appropriate columns:
plot_overlap(df, condition = "condition1", ctrl = "control1", targets = targets_df)

}
